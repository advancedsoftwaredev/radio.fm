import PlayArrowIcon from '@mui/icons-material/PlayArrow';
import { Box, Button, Typography } from '@mui/material';
import type { NextPage } from 'next';
import Head from 'next/head';
import React from 'react';

import type { ApiSongInfo } from '../../server/src/apiTypes/song';
import Header from '../components/Header';
import { useSocketInterface } from '../components/hooks/socketContext';
import { useSong, useSongHandler } from '../components/hooks/songContext';
import ParticlesComponent from '../components/Particles';
import VolumeSlider from '../components/VolumeSlider';

import styles from '../styles/Home.module.css';

const Home: NextPage = () => {
  const socketHandler = useSocketInterface();
  const song = useSong();
  const songHandler = useSongHandler();

  const getSongCaption = (songData: ApiSongInfo) => `"${songData.title}" - ${songData.artist}`;

  return (
    <Box display="flex" flexDirection="column" sx={{ height: '100vh' }}>
      <ParticlesComponent />
      <Head>
        <title>Now Listening to Radio.FM!</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      <Box display="flex" flex="1" sx={{ flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>
        <h1 className={styles.title}>You are listening to Radio.FM!</h1>

        {song?.song && (
          <>
            {song.song.albumImageUrl && (
              <img
                src={song.song.albumImageUrl}
                alt="Song album cover"
                style={{ width: '15rem', marginBottom: '1rem' }}
              />
            )}

            <Typography variant="h5" fontWeight="bold">
              {getSongCaption(song.song)}
            </Typography>

            <Box sx={{ border: '0px solid white', maxWidth: '30rem', marginTop: '1rem', textAlign: 'center' }}>
              <Typography variant="subtitle1">{song.song.description}</Typography>
            </Box>

            <Typography sx={{ marginTop: '1rem' }}>
              {song.listenerCount > 1 ? (
                <>
                  There are <strong>{song.listenerCount}</strong> people listening!
                </>
              ) : (
                <>
                  There is <strong>{song.listenerCount}</strong> person listening!
                </>
              )}
            </Typography>

            <Button
              onClick={() => {
                void socketHandler?.getTime();
                if (song.volume === 0) {
                  songHandler?.setVolumeValue(0.5);
                }
              }}
            >
              <Box display="flex" alignItems="center">
                <Typography sx={{ fontSize: '2rem' }}>Play</Typography>
                <PlayArrowIcon sx={{ fontSize: '4rem' }} />
              </Box>
            </Button>
          </>
        )}

        {song?.nextSong && (
          <>
            <Typography sx={{ fontWeight: 'bold', marginTop: '1rem' }}>Up Next...</Typography>
            <Typography variant="subtitle2">{getSongCaption(song.nextSong)}</Typography>
          </>
        )}
      </Box>

      <VolumeSlider />
    </Box>
  );
};

export default Home;
