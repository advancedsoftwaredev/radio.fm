import { Box, Button, Typography } from '@mui/material';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useRouter } from 'next/router';
import React from 'react';

import type { ApiSongInfo } from '../../server/src/apiTypes/song';
import Header from '../components/Header';
import { useSong, useSongHandler } from '../components/hooks/songContext';
import { useUserData } from '../components/hooks/userContext';
import LikeButton from '../components/LikeButton';
import ListenerCount from '../components/ListenerCount';
import PlayButton from '../components/PlayButton';
import { api } from '../util/api';

import styles from '../styles/Home.module.css';

const Home: NextPage = () => {
  const song = useSong();
  const user = useUserData();
  const songHandler = useSongHandler();
  const router = useRouter();

  const getSongCaption = (songData: ApiSongInfo) => `"${songData.title}" - ${songData.artist}`;

  const likeHandler = async (songId: string | null, liked: boolean) => {
    if (!songId) {
      return;
    }

    if (liked) {
      await api.user.unlikeSong({ songId });
    } else {
      await api.user.likeSong({ songId });
    }

    void songHandler?.getSongLiked(songId);
  };

  return (
    <Box display="flex" flexDirection="column">
      <Head>
        <title>Now Listening to Radio.FM!</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <Box
        display="flex"
        flex="1"
        sx={{ flexDirection: 'column', justifyContent: 'center', alignItems: 'center', marginTop: '5rem' }}
      >
        <h1 className={styles.title}>You are listening to Radio.FM!</h1>

        {song?.song && (
          <>
            {song.song.albumImageUrl && (
              <img
                src={song.song.albumImageUrl}
                alt="Song album cover"
                style={{ width: '15rem', marginBottom: '1rem' }}
              />
            )}

            <Box sx={{ display: 'flex', alignItems: 'center' }}>
              <Typography variant="h5" fontWeight="bold">
                {getSongCaption(song.song)}
              </Typography>
              {user && user.role !== 'GUEST' && (
                <LikeButton likeHandler={() => likeHandler(song.song?.id ?? null, song.liked)} liked={song.liked} />
              )}
            </Box>

            <Box sx={{ border: '0px solid white', maxWidth: '30rem', marginTop: '1rem', textAlign: 'center' }}>
              <Typography variant="subtitle1">{song.song.description}</Typography>
            </Box>

            <ListenerCount count={song.listenerCount} />

            <PlayButton />
          </>
        )}

        {song?.nextSong && (
          <>
            <Typography sx={{ fontWeight: 'bold', marginTop: '1rem' }}>Up Next...</Typography>
            <Typography variant="subtitle2">{getSongCaption(song.nextSong)}</Typography>
          </>
        )}
      </Box>
      <Box sx={{ position: 'fixed', right: '1rem', bottom: '1rem' }}>
        <Button onClick={() => router.push('/chatbox')}>
          <Typography variant="h6">Text Chat</Typography>
        </Button>
      </Box>
    </Box>
  );
};

export default Home;
